package Fauna.AllHerbivores;

import Fauna.Herbs;
import Fauna.Animal;
import SupportClasses.Statistics;

import java.util.List;

public abstract class Herbivores extends Animal {

    public Herbivores(String name, double maxWeight, int maxCountOnCell, int speed, double foodNeed) {
        super(name, maxWeight, maxCountOnCell, speed, foodNeed);
    }

    /**
     * –û–±—â–∞—è –ª–æ–≥–∏–∫–∞ —Ç—Ä–∞–≤–æ—è–¥–Ω—ã—Ö ‚Äî –æ–Ω–∏ –µ–¥—è—Ç —Ä–∞—Å—Ç–µ–Ω–∏—è.
     */
    @Override
    public void eat(List<Animal> others) {
        for (Object other : others) {
            if (other instanceof Herbs herb && herb.isAlive()) {
                System.out.println(name + " ate some grass üåø");
                herb.beEaten();
                hunger = 1.0;

                // ‚úÖ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                Statistics.markGrassEaten(this);

                return;
            }
        }
    }

    /**
     * –ü–æ–ø—ã—Ç–∫–∞ —Å—ä–µ—Å—Ç—å —Ç—Ä–∞–≤—É (–∏–∑ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å).
     */
    public boolean tryEatPlants(List<Herbs> plants) {
        if (plants != null && !plants.isEmpty()) {
            Herbs herb = plants.remove(0); // —Å—ä–µ–ª–∏ –æ–¥–∏–Ω –ø—É—á–æ–∫
            if (herb != null && herb.isAlive()) {
//                System.out.println(name + " ate some grass üåø");
                hunger = 1.0;

                // ‚úÖ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                Statistics.markGrassEaten(this);

                return true;
            }
        }
        return false;
    }
}
